#labels Gleed2D,Editor
Describes how to use Gleed2D to make levels for magic world.

= Introduction =

Although the level loading is not completely implemented yet it is already fairly


= Setup =

 # Download Gleed2D here: http://gleed2d.codeplex.com/
 # Start it and press F9 or use Tools->Settings to bring up the settings menu.
 # Choose a default content root folder. This should be the path to the projects content root folder. In my case it is "C:\MagicWorld\Platformer\Content".
 # Make sure DefaultTextureOrigin mode is set to TextureCenter(should be the default anyway).

= Creating levels (Quick step guide) =

||Layer||Description||
||Zero||Has only one Textures that is always displayed and never moved. It spans the whole screen and represents the one "most far away".||
||Background||The actual level background that is scrolled when the player moves. This layer does not collide with anything.||
||Middle||This is where all the platforms and the ground of the level go. Everything in here is included in collision checks.||
||Front||Behaves like Background but is drawn in over middle.||
||Special||This layer holds all information like starting point, exit point, level bounds and Level Properties (usable spells, collectable items ...).||
||Ingredient||Layer for Ingredients||
||Enemy||Layer for enemies||
||Blockade||Impassable objects.||

 # Start by creating layers and name them according to their ingame alias (see above).
 # Add textures to the layers (except special layer) to create your level. Do not scale or rotate textures as it is not supported yet.
 # Add a circle primitive to the special layer and name it *start* to add the starting point for the level.
 # Do the same again but name the circle *exit* to set the exit point of the level.
 # Finally place two rectangle primitives. One at the top left corner of the level and the other at the bottom right corner of the level. Name them *bottomRight* and *topLeft* according to their position.
 # Save the file and add it to your project, then open it.
 # The first and last element in the xml are called Level. Change them to *Gleed2dLevelLoader* (note the lower case d).

Note: Please name the xml level files "levelN.xml" where N is the number of the level and put the xml files in the LevelData folder.

= Special layer =

As mention above the special layer holds information instead of textures.
What was not covered before is the placement of the collectibles.
Collectibles are added through circle primitives, but instead of naming them you have to add a custom property to them (John please elaborate!).


In the future this layer will also be used to place enemies and their waypoints as well as all other game objects. 


== Ingredients ==
Ingredients must be placed on the Ingredients layer.


== setting the level properties ==
Put a primitive object on the special layer with the name *LevelProperties*. 

=== add usable spells ===
Add one custom property (type: free text) to the *LevelProperties*-Item. If you name the property:
  * warm
  * cold
  * push
  * pull
  * electric
  * nogravity
  * matter
it means that this spell is available for this level. Use one custom property for each available spell. No value is needed for the property.

=== min item to collect to finish the level ===
To set the minimum amount of collectable items the player needs to collect to finish the level add a custom property to the LevelProperties with the name *min item* (type: free text). Set the value to the number of items the player has to collect to finish the level.

=== set max time for level ===
Add a custom property to the "LevelProperties" with the name *max time* (type: free text). Set the value to the time (in seconds) the player has to finish the level.

=== Set path for Enemy ===
Add Primitive with type path to the level editor. Set the waypoint in the Leveleditor with left mouse click press 2 if you are done (or middlemouse click).
Add a custom property "Path "to the enemy which you want to add the path. Link the PathItem with the custom property in the enemy.


= switches and switchable objects =
Put all switches and switchable objects on special layer.
For Switches add one custom property (type: free text) "switch" with a unique id.
For the switchable item add a custom property (type: free text) "switchable" with the id of the switch.

== switchable objects ==

=== door ===
For Switches add one custom property (type: free text) "door".